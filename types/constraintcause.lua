-- THIS FILE AUTOGENERATED BY terms-gen-meta.lua
---@meta "types.constraintcause"

---@class (exact) constraintcause: EnumValue
constraintcause = {}

---@return boolean
function constraintcause:is_primitive() end
---@return string, Anchor
function constraintcause:unwrap_primitive() end
---@return boolean, string, Anchor
function constraintcause:as_primitive() end
---@return boolean
function constraintcause:is_composition() end
---@return constraintcause, constraintcause, Anchor
function constraintcause:unwrap_composition() end
---@return boolean, constraintcause, constraintcause, Anchor
function constraintcause:as_composition() end
---@return boolean
function constraintcause:is_leftcall_discharge() end
---@return constraintcause, constraintcause, Anchor
function constraintcause:unwrap_leftcall_discharge() end
---@return boolean, constraintcause, constraintcause, Anchor
function constraintcause:as_leftcall_discharge() end
---@return boolean
function constraintcause:is_rightcall_discharge() end
---@return constraintcause, constraintcause, Anchor
function constraintcause:unwrap_rightcall_discharge() end
---@return boolean, constraintcause, constraintcause, Anchor
function constraintcause:as_rightcall_discharge() end
---@return boolean
function constraintcause:is_lost() end
---@return string, string, any
function constraintcause:unwrap_lost() end
---@return boolean, string, string, any
function constraintcause:as_lost() end

---@class (exact) constraintcauseType: EnumType
---@field define_enum fun(self: constraintcauseType, name: string, variants: Variants): constraintcauseType
---@field primitive fun(description: string, position: Anchor): constraintcause
---@field composition fun(left: constraintcause, right: constraintcause, position: Anchor): constraintcause
---@field leftcall_discharge fun(call: constraintcause, constraint: constraintcause, position: Anchor): constraintcause
---@field rightcall_discharge fun(constraint: constraintcause, call: constraintcause, position: Anchor): constraintcause
---@field lost fun(unique_string: string, stacktrace: string, auxiliary: any): constraintcause
return {}
